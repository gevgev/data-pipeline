{
  "objects": [
    {
      "period": "1 Day",
      "name": "DefaultSchedule",
      "id": "DefaultSchedule",
      "myComment": "This object is used to specify the time-based trigger for executing Activities and for provisioning Resources of the pipeline. In this case it is used by the 'Default' object so it will cascade down to all other objects in the pipeline if they do not override it. For this example, we are using it to specify that our pipeline will run immediately upon activation. Also, we are using the 'occurrences' option specify that the pipeline should only be run once. You can have multiple schedules defined in a pipeline.",
      "type": "Schedule",
      "startAt": "FIRST_ACTIVATION_DATE_TIME"
    },
    {
      "role": "DataPipelineDefaultRole",
      "subject": "FAILURE: Aggregated",
      "name": "FailureNotify",
      "id": "ActionId_TKNq6",
      "message": "Aggregated viewership/household #{myDaysAggregate} days reports generation failed",
      "type": "SnsAlarm",
      "topicArn": "arn:aws:sns:us-west-2:539114338268:viewership-reports-completed"
    },
    {
      "imageId": "ami-20b97540",
      "instanceType": "r3.xlarge",
      "name": "EC2ResourceObj",
      "id": "EC2ResourceObj",
      "type": "Ec2Resource",
      "myComment": "Ec-2 instance to run on",
      "terminateAfter": "18 Hour"
    },
    {
      "role": "DataPipelineDefaultRole",
      "subject": "SUCCESS: Aggregated viewership/household #{myDaysAggregate} days reports generated",
      "name": "SuccessNotify",
      "id": "ActionId_vMO4H",
      "message": "Aggregated viewership/household reports generated",
      "type": "SnsAlarm",
      "topicArn": "arn:aws:sns:us-west-2:539114338268:viewership-reports-completed"
    },
    {
      "directoryPath": "#{myS3InputLoc}",
      "name": "S3InputLocation",
      "id": "S3InputLocation",
      "type": "S3DataNode",
      "myComment": "Input Stage S3 Location - binaries and scripts"
    },
    {
      "directoryPath": "#{myS3OutputLoc}/#{format(@scheduledStartTime, 'YYYY-MM-dd-HH-mm-ss')}",
      "name": "S3OutputLocation",
      "id": "S3OutputLocation",
      "type": "S3DataNode",
      "myComment": "Output S3 Location for Logs"
    },
    {
      "failureAndRerunMode": "CASCADE",
      "schedule": {
        "ref": "DefaultSchedule"
      },
      "resourceRole": "DataPipelineDefaultResourceRole",
      "role": "DataPipelineDefaultRole",
      "pipelineLogUri": "s3://daap-pipeline/",
      "scheduleType": "cron",
      "name": "Default",
      "id": "Default",
      "myComment": "Pipeline root object"
    },
    {
      "output": {
        "ref": "S3OutputLocation"
      },
      "input": {
        "ref": "S3InputLocation"
      },
      "stage": "true",
      "onFail": {
        "ref": "ActionId_TKNq6"
      },
      "name": "ShellCommandActivityObj",
      "id": "ShellCommandActivityObj",
      "runsOn": {
        "ref": "EC2ResourceObj"
      },
      "myComment": "Shell Command Activity Obj",
      "type": "ShellCommandActivity",
      "command": "#{myShellCmd}",
      "onSuccess": {
        "ref": "ActionId_vMO4H"
      }
    }
  ],
  "parameters": [
    {
      "description": "Days after for aggregation",
      "id": "myDaysAggregate",
      "type": "String"
    },
    {
      "description": "S3 input folder",
      "id": "myS3InputLoc",
      "type": "AWS::S3::ObjectKey"
    },
    {
      "description": "S3 output folder",
      "id": "myS3OutputLoc",
      "type": "AWS::S3::ObjectKey"
    },
    {
      "description": "Shell command to run",
      "id": "myShellCmd",
      "type": "String"
    }
  ],
  "values": {
    "myDaysAggregate" : "2",
    "myShellCmd": "sudo yum install -y perl-Switch perl-DateTime perl-Sys-Syslog perl-LWP-Protocol-https\ncurl http://aws-cloudwatch.s3.amazonaws.com/downloads/CloudWatchMonitoringScripts-1.2.1.zip -O\nunzip CloudWatchMonitoringScripts-1.2.1.zip\nrm CloudWatchMonitoringScripts-1.2.1.zip\ncp ${INPUT1_STAGING_DIR}/* .\nchmod u+x ./loop.sh\nchmod u+x ./run.sh\nchmod u+x ./viewership-aggregator\nchmod u+x ./precondition\n./loop.sh #{myDaysAggregate}\ncd aws-scripts-mon \n./mon-put-instance-data.pl --mem-util --mem-used --mem-avail",
    "myS3InputLoc": "s3://daap-pipeline/viewership-aggregator/",
    "myS3OutputLoc": "s3://daap-pipeline/"
  }
}